let -> (-1, -1)
identifier -> (7, 'a')
, -> (-1, -1)
identifier -> (8, 'b')
, -> (-1, -1)
identifier -> (9, 'c')
: -> (-1, -1)
int -> (-1, -1)
; -> (-1, -1)
in -> (-1, -1)
( -> (-1, -1)
identifier -> (7, 'a')
) -> (-1, -1)
; -> (-1, -1)
in -> (-1, -1)
( -> (-1, -1)
identifier -> (8, 'b')
) -> (-1, -1)
; -> (-1, -1)
in -> (-1, -1)
( -> (-1, -1)
identifier -> (9, 'c')
) -> (-1, -1)
; -> (-1, -1)
if -> (-1, -1)
( -> (-1, -1)
identifier -> (7, 'a')
> -> (-1, -1)
identifier -> (8, 'b')
and -> (-1, -1)
identifier -> (7, 'a')
> -> (-1, -1)
identifier -> (9, 'c')
) -> (-1, -1)
; -> (-1, -1)
{ -> (-1, -1)
out -> (-1, -1)
( -> (-1, -1)
identifier -> (7, 'a')
) -> (-1, -1)
; -> (-1, -1)
stop -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
if -> (-1, -1)
( -> (-1, -1)
identifier -> (8, 'b')
> -> (-1, -1)
identifier -> (7, 'a')
and -> (-1, -1)
identifier -> (8, 'b')
> -> (-1, -1)
identifier -> (9, 'c')
) -> (-1, -1)
; -> (-1, -1)
{ -> (-1, -1)
out -> (-1, -1)
( -> (-1, -1)
identifier -> (8, 'b')
) -> (-1, -1)
; -> (-1, -1)
stop -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
if -> (-1, -1)
( -> (-1, -1)
identifier -> (9, 'c')
> -> (-1, -1)
identifier -> (7, 'a')
and -> (-1, -1)
identifier -> (9, 'c')
> -> (-1, -1)
identifier -> (8, 'b')
) -> (-1, -1)
; -> (-1, -1)
{ -> (-1, -1)
out -> (-1, -1)
( -> (-1, -1)
identifier -> (9, 'c')
) -> (-1, -1)
; -> (-1, -1)
stop -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
~ -> (-1, -1)
