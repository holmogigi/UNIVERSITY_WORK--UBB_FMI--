% 3. Dându-se o listă formată din numere întregi, să se genereze ȋn PROLOG lista submulţimilor
%    cu număr par de elemente. Se vor scrie modelele matematice și modelele de flux pentru
%    predicatele folosite. 
%    Exemplu- pentru lista L=[2,3,4] ⇒ [[],[2,3],[2,4],[3,4]] (nu neapărat în această ordine)

% subset(l1l2...ln) = 
% = [], if n = 0
% = {l1} U subset(l2...ln), if n >= 1
% = subset(l2...ln), if n >= 1

% subset(L:list, R:result list)
% (i,o)

subset([],[]).
subset([H|T],[H|R]):-
    subset(T,R).
subset([_|T],R):-
    subset(T,R).

% myLength(l1l2...ln) = 
% = 0, if n = 0
% = 1 + myLength(l2...ln), otherwise

% myLength(L:list, R:number)
% (i,o)

myLength([],0).
myLength([_|T],R1):-
    myLength(T,R),
    R1 is R + 1.


% checkEven(l1l2...ln) = 
% = true, if myLength(l1l2...ln) % 2  == 0
% = false, otherwise

% checkEven(L:list)
% (i)

checkEven(L):-
    myLength(L,N),
    N mod 2 =:= 0.

% oneSol(l1l2...ln) = 
% subset(l1l2...ln), if checkEven(l1l2...ln) = true

% oneSol(L:list, R:list)
% (i,o)

oneSol(L,R):-
    subset(L,R),
    checkEven(R).

allSols(L,R):-
    findall(RPartial,oneSol(L,RPartial),R).

